(function($,window,document,undefined){var settings={localVideo:document.getElementById("localVideo"),remoteVideo:document.getElementById("remoteVideo"),statusElem:"#videoStatus",channelInputElem:"#videoChannelInput",peerCountElem:null,signallingServer:"ws://signaling.freshtilledsoil.com:1337",iceServers:null,optionalDataChannel:null,isDataChannel:false,currChannelName:"",currDomain:"",mediaParametersAudio:true,mediaParametersVideo:true,constraints:null,mediaConstraints:{mandatory:{OfferToReceiveAudio:true,OfferToReceiveVideo:true}},videoConstraints:{mandatory:{},optional:[]},isOfferer:false,isAnswerer:true,currPeerCount:0,rtcStartMode:"channel-entry",rtcStatusUpdate:{entry:{statusHTML:'Enter any room name into the field and<br>give that name to a friend to enter...<input id="videoChannelInput" class="video-channel-input" type="text" placeholder="enter channel name" /><button id="videoChatStartButton" class="video-chat-start-button">Start Chat</button>',statusFx:function($this,statusType){$this.socket=null;$this.peerConn=null;$this.sessionStarted=false;$this.localStream=null;$this.remoteStream=null;$this.opts.isOfferer=false;$this.opts.isAnswerer=true;$this.attr({"class":"main-container entry"});setStatus($this,statusType);updateLocalVideoForEntryState($this);updateRemoteVideoForEntryState($this);console.log("entry status");$("#videoChatStartButton").off().on("click",function(){var $channelInput=$($this.opts.channelInputElem);if($channelInput.val().length<=0){alert("Please enter a channel name to continue!");$channelInput.focus()}else{$this.opts.currChannelName=$channelInput.val();startLocalMediaCapture($this,connectToSignallingServer)}});$("#videoChannelInput").keyup(function(e){if(e.keyCode==13){var $channelInput=$($this.opts.channelInputElem);if($channelInput.val().length<=0){alert("Please enter a channel name to continue!");$channelInput.focus()}else{$this.opts.currChannelName=$channelInput.val();startLocalMediaCapture($this,connectToSignallingServer)}}})}},allow:{statusHTML:"Please click 'Allow'<br>to start local video/audio stream",statusFx:function($this,statusType){$this.attr({"class":"main-container allow"});if(isMoz){$this.opts.rtcStatusUpdate.allow.statusHTML="Please click 'Share Selected Devices'<br>to start local video/audio stream"}setStatus($this,statusType);console.log("allow status")}},waiting:{statusHTML:"Channel Name: <strong>{{channel_name}}</strong> <span class='exit-channel'>(<a href='#' class='exit-channel-link'>exit channel</a>)</span><br>Waiting for another peer to join channel...",statusFx:function($this,statusType){$this.attr({"class":"main-container waiting"});$($this.opts.statusElem).fadeIn();updateLocalVideoForWaitingState($this);updateRemoteVideoForWaitingState($this);setStatus($this,statusType);$("a.exit-channel-link").off().on("click",function(e){e.preventDefault();disconnectFromSignallingServer($this);doStatusUpdate($this,"entry");endLocalMediaCapture($this)});console.log("waiting status")}},connecting:{statusHTML:"Peer found, establishing connection...",statusFx:function($this,statusType){$this.attr({"class":"main-container connecting"});$($this.opts.statusElem).fadeIn();updateLocalVideoForWaitingState($this);updateRemoteVideoForWaitingState($this);setStatus($this,statusType);console.log("connecting status")}},connected:{statusHTML:'<button id="videoChatHangupButton" class="video-chat-hangup-button">HANG UP</button>',statusFx:function($this,statusType){$this.attr({"class":"main-container connected"});$($this.opts.statusElem).fadeOut();updateRemoteVideoForConnectedState($this);updateLocalVideoForConnectedState($this);setStatus($this,statusType);$($this.opts.statusElem).fadeIn();$("#videoChatHangupButton").off().on("click",function(){onHangUp($this)});console.log("connected status")}},localHangup:{statusHTML:"",statusFx:function($this,statusType){$this.socket=null;$this.peerConn=null;$this.sessionStarted=false;$this.localStream=null;$this.remoteStream=null;$this.opts.isOfferer=false;$this.opts.isAnswerer=true;doStatusUpdate($this,"entry");console.log("Local peer hangup.")}},remoteHangup:{statusHTML:"",statusFx:function($this,statusType){doStatusUpdate($this,"waiting");console.log("Remote peer hangup.");$this.sessionStarted=false;$this.remoteStream=null}},channelFull:{statusHTML:"",statusFx:function($this,statusType){setStatus($this,statusType);$this.attr({"class":"main-container channelfull"});console.log("channelFull status")}}}},w=window,n=navigator,ua=n.userAgent,isMoz=!!n.mozGetUserMedia,isAndroid=ua.toLowerCase().indexOf("android")>-1,PeerConnection=w.mozRTCPeerConnection||w.webkitRTCPeerConnection,SessionDescription=w.mozRTCSessionDescription||w.RTCSessionDescription,IceCandidate=w.mozRTCIceCandidate||w.RTCIceCandidate,rtcInstances=[],methods={init:function(options){opts=$.extend({},settings,options);return this.each(function(){var $this=$(this);var statusElemTopOffset=$(opts.statusElem).offset().top;var localVideoHeight=statusElemTopOffset*0.88;$this.el=this;$this.opts=opts;$this.socket=null;$this.peerConn=null;$this.sessionStarted=false;$this.localStream=null;$this.remoteStream=null;$this.thisDomain=document.domain;$this.iceServers=setIceServers($this);$this.optionalDataChannel=setOptionalDataChannels($this);rtcInstances[rtcInstances.length]=$this;$this.startTime=new Date().getTime();setCurrentDomain($this);doStatusUpdate($this,"entry");$(window).on("resize",function(){if($this.sessionStarted&&$this.localStream&&$this.remoteStream){updateLocalVideoForConnectedState($this);updateRemoteVideoForConnectedState($this)}})})},remove:function(){return this.each(function(){var sticky=this;$.each(rtcInstances,function(i,$sb){if($sb.get(0)===sticky){reset(null,$sb);rtcInstances.splice(i,1);return false}})})},destroy:function(){$.each(rtcInstances,function(i,$sb){reset(null,$sb)});rtcInstances=[];$window.unbind("scroll",function(){window.setTimeOut(moveIntoView,settings.delay)});$window.unbind("resize",reset);return this}};n.GetUserMedia=n.mozGetUserMedia||n.webkitGetUserMedia;var startLocalMediaCapture=function($this,callback){if($this){console.log("Attempting to connect to local media (video/audio)");doStatusUpdate($this,"allow");try{n.GetUserMedia({audio:true,video:true},function(stream){console.log("Local media stream acquired successfully");$this.opts.localVideo[isMoz?"mozSrcObject":"src"]=isMoz?stream:w.webkitURL.createObjectURL(stream);$this.opts.localVideo.play();$this.localStream=stream;if(typeof callback==="function"){callback($this)}},function(error){console.log("An error occured: [CODE "+error.code+"]")})}catch(e){console.log("Unable to obtain local media stream; error code: "+e.message);alert("Unable to obtain local media stream; error code: "+e.message)}}};var endLocalMediaCapture=function($this,callback){console.log("Local media stream capture ended.");$this.opts.localVideo[isMoz?"mozSrcObject":"src"]=isMoz?null:"";$this.opts.localVideo.pause();$this.localStream=null;if(typeof callback==="function"){callback($this)}};var updateLocalVideoForEntryState=function($this){$this.opts.localVideo.style.opacity=0;$this.opts.localVideo.style["box-shadow"]="none";$this.opts.localVideo.style.border="1px solid rgba(0,0,0,0.4)"};var updateLocalVideoForWaitingState=function($this){var statusElemTopOffset=$($this.opts.statusElem).offset().top;var localVideoHeight=statusElemTopOffset*0.88;$this.opts.localVideo.style.height=(localVideoHeight)+"px";$this.opts.localVideo.style.width=(localVideoHeight/1.56)+"px";$this.opts.localVideo.style["margin-left"]=-(localVideoHeight/1.56)/2+"px";$this.opts.localVideo.style["box-shadow"]="none";$this.opts.localVideo.style.border="1px solid rgba(0,0,0,0.4)";$this.opts.localVideo.style.opacity=1};var updateLocalVideoForConnectedState=function($this){var statusWindowHeight=$(window).height()||$(screen).height();var localVideoHeight=statusWindowHeight*0.13;$this.opts.localVideo.style.height=(localVideoHeight)+"px";$this.opts.localVideo.style.width=(localVideoHeight/1.56)+"px";$this.opts.localVideo.style["margin-left"]=-(localVideoHeight/1.56)/2+"px";$this.opts.localVideo.style["box-shadow"]="0px 0px 12px rgba(185,185,185,0.5)";$this.opts.localVideo.style.border="1px solid rgba(0,0,0,0.4)";$this.opts.localVideo.style.opacity=0.77};var updateRemoteVideoForEntryState=function($this){$this.opts.remoteVideo.style.opacity=0};var updateRemoteVideoForWaitingState=function($this){$this.opts.remoteVideo.style.opacity=0};var updateRemoteVideoForConnectedState=function($this){var screenHeight=$(window).height()||$(screen).height();var screenWidth=$(window).width()||$(screen).width();var remoteVidHeight=screenHeight;var remoteVidWidth=screenHeight/1.56;var remoteVidMarginBottom=0;var remoteVidMarginLeft=(screenWidth-remoteVidWidth)/2;if(remoteVidWidth>screenWidth){remoteVidHeight=screenWidth*1.56;remoteVidWidth=screenWidth;remoteVidMarginBottom=((screenHeight-remoteVidHeight));remoteVidMarginLeft=0}$this.opts.remoteVideo.style.height=remoteVidHeight+"px";$this.opts.remoteVideo.style.width=remoteVidWidth+"px";$this.opts.remoteVideo.style["margin-bottom"]=remoteVidMarginBottom+"px";$this.opts.remoteVideo.style["margin-left"]=remoteVidMarginLeft+"px";$this.opts.remoteVideo.style.opacity=1};var connect=function($this){if($this){if(!$this.sessionStarted&&$this.localStream){createPeerConnection($this);var timestamp=new Date().getTime();console.log(timestamp+": Adding local media stream to peer connection");$this.peerConn.addStream($this.localStream);$this.sessionStarted=true;timestamp=new Date().getTime();console.log(timestamp+": Sending offer to peer.");$this.peerConn.createOffer(function(sessionDescription){setLocalAndSendMessage($this,sessionDescription)},null,$this.opts.mediaConstraints)}else{alert("YOU MUST INITIALIZE YOUR VIDEO BEFORE CONNECTING!")}}};var disconnect=function($this){};var createPeerConnection=function($this){try{var timestamp=new Date().getTime();console.log(timestamp+": Creating peer connection");$this.peerConn=new PeerConnection($this.iceServers,$this.optionalDataChannel);$this.peerConn.onicecandidate=function(event){onIceCandidate($this,event)}}catch(e){timestamp=new Date().getTime();console.log(timestamp+": Failed to create PeerConnection, exception: "+e.message)}$this.peerConn.onaddstream=function(event){onRemoteStreamAdded($this,event)};$this.peerConn.onremovestream=function(event){onRemoteStreamRemoved($this,event)};$this.peerConn.oniceconnectionstatechange=function(event){onIceConnectionStateChange($this,event)};$this.peerConn.onsignalingstatechange=function(event){onSignalingStateChange($this,event)}};var closePeerConnection=function($this){$this.peerConn.close();$this.peerConn=null;$this.opts.remoteVideo[isMoz?"mozSrcObject":"src"]="";$this.remoteStream=null};var onIceCandidate=function($this,event){var timestamp=new Date().getTime();console.log("["+timestamp+"] onicecandidate(event) object below -------: ");console.log(event);if(event.candidate){sendMessage($this,{type:"candidate",label:event.candidate.sdpMLineIndex,id:event.candidate.sdpMid,candidate:event.candidate.candidate})}else{console.log("End of candidates.")}};var onIceConnectionStateChange=function($this,event){var timestamp=new Date().getTime();console.log("["+timestamp+"] oniceconnectionstatechange(event) object below -------: ");console.log(event)};var onSignalingStateChange=function($this,event){var timestamp=new Date().getTime();console.log("["+timestamp+"] onsignalingstatechange(event) object below -------: ");console.log(event)};var onRemoteStreamAdded=function($this,event){var timestamp=new Date().getTime();console.log(timestamp+": remote stream added to peer connection");$this.remoteStream=event.stream;$this.opts.remoteVideo[isMoz?"mozSrcObject":"src"]=isMoz?$this.remoteStream:w.webkitURL.createObjectURL($this.remoteStream);$this.opts.remoteVideo.play();doStatusUpdate($this,"connected")};var onRemoteStreamRemoved=function($this,event){var timestamp=new Date().getTime();console.log(timestamp+": remote stream remove from peer connection");$this.opts.remoteVideo[isMoz?"mozSrcObject":"src"]="";$this.remoteStream=null};var setLocalAndSendMessage=function($this,sessionDescription){$this.peerConn.setLocalDescription(sessionDescription);sendMessage($this,sessionDescription)};var connectToSignallingServer=function($this,callback){if($this){console.log("Connecting to signalling server");if(!$this.socket){$this.socket=new WebSocket($this.opts.signallingServer+"/?room=fts-"+$this.opts.currDomain+"-"+$this.opts.currChannelName+"&r="+$this.opts.currDomain);$this.socket.addEventListener("message",function(event){onMessage($this,event)},false);w.onbeforeunload=function(){disconnectFromSignallingServer($this)};if(typeof callback==="function"){callback($this)}}}};var disconnectFromSignallingServer=function($this,callback){if($this){console.log("Disconnecting from signalling server");sendMessage($this,{type:"bye"});$this.socket.removeEventListener("message",onMessage,false);$this.socket.close();$this.socket=null;w.onbeforeunload=null;$this.opts.currChannelName="";if(typeof callback==="function"){callback($this)}}};var closeSession=function($this){if($this.sessionStarted){closePeerConnection($this)}};var onMessage=function($this,event){console.log("RECEIVED: "+event.data);processSignallingMessage($this,event.data)};var sendMessage=function($this,msg){console.log("SENT: "+msg);var myMsg=JSON.stringify(msg);$this.socket.send(myMsg)};var processSignallingMessage=function($this,message){var msg=JSON.parse(message);console.log(msg);signallingMessageHandler[msg.type]($this,message)};var signallingMessageHandler={offer:function($this,message){var msg=JSON.parse(message);if(!$this.sessionStarted&&$this.localStream){createPeerConnection($this);var timestamp=new Date().getTime();console.log(timestamp+": Adding local media stream to peer connection");$this.peerConn.addStream($this.localStream);$this.sessionStarted=true;try{$this.peerConn.setRemoteDescription(new SessionDescription(msg));timestamp=new Date().getTime();console.log(timestamp+": Sending answer to peer.");$this.peerConn.createAnswer(function(sessionDescription){setLocalAndSendMessage($this,sessionDescription)},null,$this.opts.mediaConstraints)}catch(e){console.log("Could not send answer to peer offer.  Error code: "+e.message)}}else{console.log($this.localStream);console.log($this.sessionStarted);console.log("waiting for local video stream to process offer SDP");setTimeout(processSignallingMessage($this,message),100)}},answer:function($this,message){if($this.sessionStarted){var msg=JSON.parse(message);$this.peerConn.setRemoteDescription(new SessionDescription(msg))}},candidate:function($this,message){if($this.sessionStarted){var msg=JSON.parse(message);var candidate=new IceCandidate({sdpMLineIndex:msg.label,candidate:msg.candidate});$this.peerConn.addIceCandidate(candidate)}},bye:function($this,message){if($this){onRemoteHangUp($this)}},peerCount:function($this,message){if($this){var msg=JSON.parse(message);$this.opts.currPeerCount=msg.data||0;if($this.opts.currPeerCount>2&&!$this.sessionStarted){doStatusUpdate($this,"channelFull");disconnectFromSignallingServer($this);return false}if($this.opts.$peerCountElem){$($this.opts.$peerCountElem).html($this.opts.currPeerCount)}$this.opts.isOfferer=($this.opts.currPeerCount<=1||$this.opts.isOfferer)?true:false;$this.opts.isAnswerer=($this.opts.currPeerCount>1&&!$this.opts.isOfferer)?true:false;console.log($this.opts.isOfferer?"isOfferer":"isAnswerer");if($this.opts.currPeerCount<=1){doStatusUpdate($this,"waiting")}else{if($this.opts.currPeerCount===2){doStatusUpdate($this,"connecting");if(!$this.sessionStarted&&$this.opts.isOfferer){connect($this)}}}}},readyForCall:function($this,message){if($this){console.log("received message: readForCall")}},chat:function($this,message){}};var onRemoteHangUp=function($this){if($this.sessionStarted){closeSession($this);$this.sessionStarted=false;doStatusUpdate($this,"remoteHangup");console.log("remote peer initiated hang up.")}};var onHangUp=function($this){if($this.sessionStarted){sendMessage($this,{type:"bye"});endLocalMediaCapture($this);disconnectFromSignallingServer($this);closeSession($this);$this.sessionStarted=false;doStatusUpdate($this,"localHangup");console.log("Local peer initiated hang up.")}};var setIceServers=function($this){var STUN,TURN,iceServers;if($this){STUN={url:$this.opts.STUN||(!isMoz?"stun:stun.l.google.com:19302":"stun:23.21.150.121")};TURN={url:"turn:paul.greenlea%40freshtilledsoil.com@numb.viagenie.ca:3478",credential:"freshmountain"};iceServers={iceServers:$this.opts.iceServers||[STUN]};if(!isMoz&&!$this.opts.iceServers){if(parseInt(ua.match(/Chrom(e|ium)\/([0-9]+)\./)[2],10)>=28){TURN={url:"turn:numb.viagenie.ca",credential:"freshmountain",username:"paul.greenlea@freshtilledsoil.com"}}iceServers.iceServers=[TURN,STUN]}}return iceServers};var setOptionalDataChannels=function($this){var optional=$this.opts.optionalDataChannel||{optional:[]};if($this&&!$this.opts.optionalDataChannel){if(!isMoz){optional.optional=$this.opts.isDataChannel?[{RtpDataChannels:true}]:[{DtlsSrtpKeyAgreement:true}]}}return optional};var setMediaConstraints=function($this){};var doStatusUpdate=function($this,statusType){if($this){if(typeof $this.opts.rtcStatusUpdate[statusType].statusFx==="function"){$this.opts.rtcStatusUpdate[statusType].statusFx($this,statusType)}}};var setStatus=function($this,statusType,theHTML){if($this){if(typeof $this.opts.rtcStatusUpdate[statusType].statusHTML==="string"&&statusType.length>0){$($this.opts.statusElem).html($this.opts.rtcStatusUpdate[statusType].statusHTML.replace("{{channel_name}}",$this.opts.currChannelName))}else{if(typeof theHTML!=="undefined"){$($this.opts.statusElem).html(theHTML)}else{$($this.opts.statusElem).html(statusType.replace("{{channel_name}}",$this.opts.currChannelName))}}}};var setCurrentDomain=function($this){var tmpPrefixToAdd="",tmpDomainArray=document.domain.split(".");for(var i=0;i<tmpDomainArray.length;i++){if(tmpDomainArray.length<=2){tmpPrefixToAdd+=tmpDomainArray[i]}else{if(i!==0){tmpPrefixToAdd+=tmpDomainArray[i]}}}$this.opts.currDomain=tmpPrefixToAdd};$.fn.createVideoChat=function(method){if(methods[method]){return methods[method].apply(this,Array.prototype.slice.call(arguments,1))}else{if(!method||typeof method=="object"){return methods.init.apply(this,arguments)}}}})(jQuery,window,document);